//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace API.Models
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class dbAppILUEntities : DbContext
    {
        public dbAppILUEntities()
            : base("name=dbAppILUEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<ActiveDirectory> ActiveDirectory { get; set; }
        public virtual DbSet<AITAviso> AITAviso { get; set; }
        public virtual DbSet<AITAvisoCampoValor> AITAvisoCampoValor { get; set; }
        public virtual DbSet<AITAvisoCampoValorMultimedia> AITAvisoCampoValorMultimedia { get; set; }
        public virtual DbSet<AITAvisoCausa> AITAvisoCausa { get; set; }
        public virtual DbSet<AITAvisoMultimedia> AITAvisoMultimedia { get; set; }
        public virtual DbSet<AITAvisoMultimediaCategoria> AITAvisoMultimediaCategoria { get; set; }
        public virtual DbSet<AITAvisoServicioReferencia> AITAvisoServicioReferencia { get; set; }
        public virtual DbSet<AITAvisoTarea> AITAvisoTarea { get; set; }
        public virtual DbSet<AITAvisoTareaCausa> AITAvisoTareaCausa { get; set; }
        public virtual DbSet<AITAvisoTareaMultimedia> AITAvisoTareaMultimedia { get; set; }
        public virtual DbSet<AITAvisoTareaUsuario> AITAvisoTareaUsuario { get; set; }
        public virtual DbSet<AITAvisoUsuario> AITAvisoUsuario { get; set; }
        public virtual DbSet<AITCausa> AITCausa { get; set; }
        public virtual DbSet<AITEntidad> AITEntidad { get; set; }
        public virtual DbSet<AITEntidadUsuario> AITEntidadUsuario { get; set; }
        public virtual DbSet<AITEstado> AITEstado { get; set; }
        public virtual DbSet<AITEstadoProblema> AITEstadoProblema { get; set; }
        public virtual DbSet<AITEstadoTarea> AITEstadoTarea { get; set; }
        public virtual DbSet<AITPlantillaTareas> AITPlantillaTareas { get; set; }
        public virtual DbSet<AITProblema> AITProblema { get; set; }
        public virtual DbSet<AITProblemaCausa> AITProblemaCausa { get; set; }
        public virtual DbSet<AITProblemaServicio> AITProblemaServicio { get; set; }
        public virtual DbSet<AITProblemaServicioValor> AITProblemaServicioValor { get; set; }
        public virtual DbSet<AITServicio> AITServicio { get; set; }
        public virtual DbSet<AITServicioParametro> AITServicioParametro { get; set; }
        public virtual DbSet<AITSolucion> AITSolucion { get; set; }
        public virtual DbSet<AITSolucionCalificacion> AITSolucionCalificacion { get; set; }
        public virtual DbSet<AITSubEntidad> AITSubEntidad { get; set; }
        public virtual DbSet<AITTareaPlantilla> AITTareaPlantilla { get; set; }
        public virtual DbSet<AITTareaTipo> AITTareaTipo { get; set; }
        public virtual DbSet<AITTipoSolucion> AITTipoSolucion { get; set; }
        public virtual DbSet<AITNotificacionReaccion> AITNotificacionReaccion { get; set; }
        public virtual DbSet<AITNotificacionVista> AITNotificacionVista { get; set; }
        public virtual DbSet<AITAudit> AITAudit { get; set; }
        public virtual DbSet<AITDashboard> AITDashboard { get; set; }
        public virtual DbSet<AITDashboardTipo> AITDashboardTipo { get; set; }
        public virtual DbSet<AITGrupo> AITGrupo { get; set; }
        public virtual DbSet<AITGrupoTipo> AITGrupoTipo { get; set; }
        public virtual DbSet<AITGrupoUsuario> AITGrupoUsuario { get; set; }
        public virtual DbSet<AITNotificacion> AITNotificacion { get; set; }
        public virtual DbSet<AITNotificacionEstado> AITNotificacionEstado { get; set; }
        public virtual DbSet<AITNotificacionGrupo> AITNotificacionGrupo { get; set; }
        public virtual DbSet<AITNotificacionTipo> AITNotificacionTipo { get; set; }
        public virtual DbSet<AITPermiso> AITPermiso { get; set; }
        public virtual DbSet<AITPermisoAgrupacion> AITPermisoAgrupacion { get; set; }
        public virtual DbSet<AITRedSocial> AITRedSocial { get; set; }
        public virtual DbSet<AITReporteBiosalc> AITReporteBiosalc { get; set; }
        public virtual DbSet<AITReporteBiosalcDetalle> AITReporteBiosalcDetalle { get; set; }
        public virtual DbSet<AITReporteBiosalcDetalleVariable> AITReporteBiosalcDetalleVariable { get; set; }
        public virtual DbSet<AITRol> AITRol { get; set; }
        public virtual DbSet<AITRolPermiso> AITRolPermiso { get; set; }
        public virtual DbSet<AITRolUsuario> AITRolUsuario { get; set; }
        public virtual DbSet<AITSapLog> AITSapLog { get; set; }
        public virtual DbSet<AITSapServicio> AITSapServicio { get; set; }
        public virtual DbSet<AITSistemaOperativo> AITSistemaOperativo { get; set; }
        public virtual DbSet<AITUsuario> AITUsuario { get; set; }
        public virtual DbSet<AITUsuarioAtributo> AITUsuarioAtributo { get; set; }
        public virtual DbSet<AITUsuarioAtributoDetalle> AITUsuarioAtributoDetalle { get; set; }
        public virtual DbSet<AITUsuarioRedSocial> AITUsuarioRedSocial { get; set; }
        public virtual DbSet<AITUsuarioTokenDispositivo> AITUsuarioTokenDispositivo { get; set; }
        public virtual DbSet<AITCampo> AITCampo { get; set; }
        public virtual DbSet<AITCampoCatalogoSeleccion> AITCampoCatalogoSeleccion { get; set; }
        public virtual DbSet<AITMultimedia> AITMultimedia { get; set; }
        public virtual DbSet<AITMultimediaTipo> AITMultimediaTipo { get; set; }
        public virtual DbSet<AITPlantilla> AITPlantilla { get; set; }
        public virtual DbSet<AITTipoCampo> AITTipoCampo { get; set; }
        public virtual DbSet<AITPlantillaCorreo> AITPlantillaCorreo { get; set; }
        public virtual DbSet<UsuariosAD> UsuariosAD { get; set; }
        public virtual DbSet<AIVPermisosPorUsuario> AIVPermisosPorUsuario { get; set; }
        public virtual DbSet<AIVReporteBiosalcPorVariable> AIVReporteBiosalcPorVariable { get; set; }
        public virtual DbSet<AITTareaProblemaGrupo> AITTareaProblemaGrupo { get; set; }
        public virtual DbSet<AITObjeto> AITObjeto { get; set; }
        public virtual DbSet<AITObjetoPropiedadValor> AITObjetoPropiedadValor { get; set; }
        public virtual DbSet<AITPropiedadTipoObjeto> AITPropiedadTipoObjeto { get; set; }
        public virtual DbSet<AITTipoObjeto> AITTipoObjeto { get; set; }
    
        public virtual ObjectResult<AIPReporteBioslacPorVariable_Result> AIPReporteBioslacPorVariable(Nullable<System.DateTime> fECHA, Nullable<int> codigoReporte)
        {
            var fECHAParameter = fECHA.HasValue ?
                new ObjectParameter("FECHA", fECHA) :
                new ObjectParameter("FECHA", typeof(System.DateTime));
    
            var codigoReporteParameter = codigoReporte.HasValue ?
                new ObjectParameter("CodigoReporte", codigoReporte) :
                new ObjectParameter("CodigoReporte", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<AIPReporteBioslacPorVariable_Result>("AIPReporteBioslacPorVariable", fECHAParameter, codigoReporteParameter);
        }
    
        public virtual ObjectResult<AIPReporteBiosalcMensualPorVariable_Result> AIPReporteBiosalcMensualPorVariable(string v_anio, string v_variable, string v_ambiente)
        {
            var v_anioParameter = v_anio != null ?
                new ObjectParameter("v_anio", v_anio) :
                new ObjectParameter("v_anio", typeof(string));
    
            var v_variableParameter = v_variable != null ?
                new ObjectParameter("v_variable", v_variable) :
                new ObjectParameter("v_variable", typeof(string));
    
            var v_ambienteParameter = v_ambiente != null ?
                new ObjectParameter("v_ambiente", v_ambiente) :
                new ObjectParameter("v_ambiente", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<AIPReporteBiosalcMensualPorVariable_Result>("AIPReporteBiosalcMensualPorVariable", v_anioParameter, v_variableParameter, v_ambienteParameter);
        }
    
        public virtual ObjectResult<AIPMovimientoNominaListarPorPeriodoNomina_Result> AIPMovimientoNominaListarPorPeriodoNomina(Nullable<int> codigoPeriodoNomina, Nullable<int> codigoEmpleado, Nullable<int> codigoEncabezadoNomina)
        {
            var codigoPeriodoNominaParameter = codigoPeriodoNomina.HasValue ?
                new ObjectParameter("CodigoPeriodoNomina", codigoPeriodoNomina) :
                new ObjectParameter("CodigoPeriodoNomina", typeof(int));
    
            var codigoEmpleadoParameter = codigoEmpleado.HasValue ?
                new ObjectParameter("CodigoEmpleado", codigoEmpleado) :
                new ObjectParameter("CodigoEmpleado", typeof(int));
    
            var codigoEncabezadoNominaParameter = codigoEncabezadoNomina.HasValue ?
                new ObjectParameter("CodigoEncabezadoNomina", codigoEncabezadoNomina) :
                new ObjectParameter("CodigoEncabezadoNomina", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<AIPMovimientoNominaListarPorPeriodoNomina_Result>("AIPMovimientoNominaListarPorPeriodoNomina", codigoPeriodoNominaParameter, codigoEmpleadoParameter, codigoEncabezadoNominaParameter);
        }
    
        public virtual ObjectResult<AIPAvisosCantidadesHome_Result> AIPAvisosCantidadesHome(Nullable<int> vCodigoUsuario, string vObjeto)
        {
            var vCodigoUsuarioParameter = vCodigoUsuario.HasValue ?
                new ObjectParameter("vCodigoUsuario", vCodigoUsuario) :
                new ObjectParameter("vCodigoUsuario", typeof(int));
    
            var vObjetoParameter = vObjeto != null ?
                new ObjectParameter("vObjeto", vObjeto) :
                new ObjectParameter("vObjeto", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<AIPAvisosCantidadesHome_Result>("AIPAvisosCantidadesHome", vCodigoUsuarioParameter, vObjetoParameter);
        }
    
        public virtual ObjectResult<AIPAvisosReporteGenerico_Result> AIPAvisosReporteGenerico(Nullable<int> vCodigoProblema, Nullable<System.DateTime> vFechaInicio, Nullable<System.DateTime> vFechaFin)
        {
            var vCodigoProblemaParameter = vCodigoProblema.HasValue ?
                new ObjectParameter("vCodigoProblema", vCodigoProblema) :
                new ObjectParameter("vCodigoProblema", typeof(int));
    
            var vFechaInicioParameter = vFechaInicio.HasValue ?
                new ObjectParameter("vFechaInicio", vFechaInicio) :
                new ObjectParameter("vFechaInicio", typeof(System.DateTime));
    
            var vFechaFinParameter = vFechaFin.HasValue ?
                new ObjectParameter("vFechaFin", vFechaFin) :
                new ObjectParameter("vFechaFin", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<AIPAvisosReporteGenerico_Result>("AIPAvisosReporteGenerico", vCodigoProblemaParameter, vFechaInicioParameter, vFechaFinParameter);
        }
    
        public virtual int AIPListarObjeto(string pLlave, Nullable<int> pIdObjeto, string pIdObjetoPadre)
        {
            var pLlaveParameter = pLlave != null ?
                new ObjectParameter("PLlave", pLlave) :
                new ObjectParameter("PLlave", typeof(string));
    
            var pIdObjetoParameter = pIdObjeto.HasValue ?
                new ObjectParameter("PIdObjeto", pIdObjeto) :
                new ObjectParameter("PIdObjeto", typeof(int));
    
            var pIdObjetoPadreParameter = pIdObjetoPadre != null ?
                new ObjectParameter("PIdObjetoPadre", pIdObjetoPadre) :
                new ObjectParameter("PIdObjetoPadre", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("AIPListarObjeto", pLlaveParameter, pIdObjetoParameter, pIdObjetoPadreParameter);
        }
    
        public virtual int AIPListarObjetosHijosDiferentes(Nullable<int> pIdObjetoPadre)
        {
            var pIdObjetoPadreParameter = pIdObjetoPadre.HasValue ?
                new ObjectParameter("PIdObjetoPadre", pIdObjetoPadre) :
                new ObjectParameter("PIdObjetoPadre", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("AIPListarObjetosHijosDiferentes", pIdObjetoPadreParameter);
        }
    
        public virtual int AIPObjetoCrearModificar(Nullable<int> pIdObjeto, Nullable<int> pIdObjetoPadre, Nullable<bool> pactivo, string pLlave, string pUsuarioOpera)
        {
            var pIdObjetoParameter = pIdObjeto.HasValue ?
                new ObjectParameter("PIdObjeto", pIdObjeto) :
                new ObjectParameter("PIdObjeto", typeof(int));
    
            var pIdObjetoPadreParameter = pIdObjetoPadre.HasValue ?
                new ObjectParameter("PIdObjetoPadre", pIdObjetoPadre) :
                new ObjectParameter("PIdObjetoPadre", typeof(int));
    
            var pactivoParameter = pactivo.HasValue ?
                new ObjectParameter("Pactivo", pactivo) :
                new ObjectParameter("Pactivo", typeof(bool));
    
            var pLlaveParameter = pLlave != null ?
                new ObjectParameter("PLlave", pLlave) :
                new ObjectParameter("PLlave", typeof(string));
    
            var pUsuarioOperaParameter = pUsuarioOpera != null ?
                new ObjectParameter("PUsuarioOpera", pUsuarioOpera) :
                new ObjectParameter("PUsuarioOpera", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("AIPObjetoCrearModificar", pIdObjetoParameter, pIdObjetoPadreParameter, pactivoParameter, pLlaveParameter, pUsuarioOperaParameter);
        }
    }
}
